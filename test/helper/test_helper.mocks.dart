// Mocks generated by Mockito 5.4.5 from annotations
// in valbury_test/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i18;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:valbury_test/data/datasource/app_remote_data_source.dart'
    as _i11;
import 'package:valbury_test/data/model/request/login_request.dart' as _i12;
import 'package:valbury_test/data/model/response/album_detail_model.dart'
    as _i10;
import 'package:valbury_test/data/model/response/album_model.dart' as _i14;
import 'package:valbury_test/data/model/response/comment_model.dart' as _i8;
import 'package:valbury_test/data/model/response/post_model.dart' as _i13;
import 'package:valbury_test/data/model/response/profile_model.dart' as _i3;
import 'package:valbury_test/domain/entity/album.dart' as _i9;
import 'package:valbury_test/domain/entity/post.dart' as _i7;
import 'package:valbury_test/domain/repository/app_repository.dart' as _i4;
import 'package:valbury_test/helper/helper_enum.dart' as _i16;
import 'package:valbury_test/screen/album/album_notifier.dart' as _i19;
import 'package:valbury_test/screen/post/post_notifier.dart' as _i15;
import 'package:valbury_test/util/failure.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProfileModel_1 extends _i1.SmartFake implements _i3.ProfileModel {
  _FakeProfileModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AppRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRepository extends _i1.Mock implements _i4.AppRepository {
  MockAppRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, _i3.ProfileModel>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#login, [email, password]),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, _i3.ProfileModel>>.value(
                  _FakeEither_0<_i6.Failure, _i3.ProfileModel>(
                    this,
                    Invocation.method(#login, [email, password]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, _i3.ProfileModel>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Post>>> getMyPostList(
    int? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMyPostList, [userId]),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, List<_i7.Post>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i7.Post>>(
                    this,
                    Invocation.method(#getMyPostList, [userId]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i7.Post>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i8.CommentModel>>>
  getMyCommentPostList(int? postId) =>
      (super.noSuchMethod(
            Invocation.method(#getMyCommentPostList, [postId]),
            returnValue: _i5.Future<
              _i2.Either<_i6.Failure, List<_i8.CommentModel>>
            >.value(
              _FakeEither_0<_i6.Failure, List<_i8.CommentModel>>(
                this,
                Invocation.method(#getMyCommentPostList, [postId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i8.CommentModel>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.Album>>> getMyAlbumList(
    int? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMyAlbumList, [userId]),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, List<_i9.Album>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i9.Album>>(
                    this,
                    Invocation.method(#getMyAlbumList, [userId]),
                  ),
                ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i9.Album>>>);

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i10.AlbumDetailModel>>>
  getMyAlbumDetailList(int? albumId) =>
      (super.noSuchMethod(
            Invocation.method(#getMyAlbumDetailList, [albumId]),
            returnValue: _i5.Future<
              _i2.Either<_i6.Failure, List<_i10.AlbumDetailModel>>
            >.value(
              _FakeEither_0<_i6.Failure, List<_i10.AlbumDetailModel>>(
                this,
                Invocation.method(#getMyAlbumDetailList, [albumId]),
              ),
            ),
          )
          as _i5.Future<_i2.Either<_i6.Failure, List<_i10.AlbumDetailModel>>>);
}

/// A class which mocks [AppRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRemoteDataSource extends _i1.Mock
    implements _i11.AppRemoteDataSource {
  MockAppRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.ProfileModel> login(_i12.LoginRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#login, [request]),
            returnValue: _i5.Future<_i3.ProfileModel>.value(
              _FakeProfileModel_1(this, Invocation.method(#login, [request])),
            ),
          )
          as _i5.Future<_i3.ProfileModel>);

  @override
  _i5.Future<List<_i13.PostModel>> getMyPostList(int? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getMyPostList, [userId]),
            returnValue: _i5.Future<List<_i13.PostModel>>.value(
              <_i13.PostModel>[],
            ),
          )
          as _i5.Future<List<_i13.PostModel>>);

  @override
  _i5.Future<List<_i8.CommentModel>> getMyCommentPostList(int? postId) =>
      (super.noSuchMethod(
            Invocation.method(#getMyCommentPostList, [postId]),
            returnValue: _i5.Future<List<_i8.CommentModel>>.value(
              <_i8.CommentModel>[],
            ),
          )
          as _i5.Future<List<_i8.CommentModel>>);

  @override
  _i5.Future<List<_i14.AlbumModel>> getMyAlbumList(int? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getMyAlbumList, [userId]),
            returnValue: _i5.Future<List<_i14.AlbumModel>>.value(
              <_i14.AlbumModel>[],
            ),
          )
          as _i5.Future<List<_i14.AlbumModel>>);

  @override
  _i5.Future<List<_i10.AlbumDetailModel>> getMyAlbumDetailList(int? albumId) =>
      (super.noSuchMethod(
            Invocation.method(#getMyAlbumDetailList, [albumId]),
            returnValue: _i5.Future<List<_i10.AlbumDetailModel>>.value(
              <_i10.AlbumDetailModel>[],
            ),
          )
          as _i5.Future<List<_i10.AlbumDetailModel>>);
}

/// A class which mocks [PostNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostNotifier extends _i1.Mock implements _i15.PostNotifier {
  MockPostNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.RequestState get statePostList =>
      (super.noSuchMethod(
            Invocation.getter(#statePostList),
            returnValue: _i16.RequestState.empty,
          )
          as _i16.RequestState);

  @override
  set statePostList(_i16.RequestState? _statePostList) => super.noSuchMethod(
    Invocation.setter(#statePostList, _statePostList),
    returnValueForMissingStub: null,
  );

  @override
  List<_i7.Post> get postList =>
      (super.noSuchMethod(
            Invocation.getter(#postList),
            returnValue: <_i7.Post>[],
          )
          as List<_i7.Post>);

  @override
  List<_i7.Post> get postFavoriteList =>
      (super.noSuchMethod(
            Invocation.getter(#postFavoriteList),
            returnValue: <_i7.Post>[],
          )
          as List<_i7.Post>);

  @override
  List<_i8.CommentModel> get commentPostList =>
      (super.noSuchMethod(
            Invocation.getter(#commentPostList),
            returnValue: <_i8.CommentModel>[],
          )
          as List<_i8.CommentModel>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  _i16.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i16.RequestState.empty,
          )
          as _i16.RequestState);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void resetData() => super.noSuchMethod(
    Invocation.method(#resetData, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> fetchPostList(int? userId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchPostList, [userId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> fetchCommentPostList(int? postId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchCommentPostList, [postId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void updateFavoritePost(_i7.Post? postFavorite) => super.noSuchMethod(
    Invocation.method(#updateFavoritePost, [postFavorite]),
    returnValueForMissingStub: null,
  );

  @override
  void setMessage(String? message) => super.noSuchMethod(
    Invocation.method(#setMessage, [message]),
    returnValueForMissingStub: null,
  );

  @override
  void setState(_i16.RequestState? state) => super.noSuchMethod(
    Invocation.method(#setState, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i18.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AlbumNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlbumNotifier extends _i1.Mock implements _i19.AlbumNotifier {
  MockAlbumNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.RequestState get stateAlbumList =>
      (super.noSuchMethod(
            Invocation.getter(#stateAlbumList),
            returnValue: _i16.RequestState.empty,
          )
          as _i16.RequestState);

  @override
  set stateAlbumList(_i16.RequestState? _stateAlbumList) => super.noSuchMethod(
    Invocation.setter(#stateAlbumList, _stateAlbumList),
    returnValueForMissingStub: null,
  );

  @override
  List<_i9.Album> get albumList =>
      (super.noSuchMethod(
            Invocation.getter(#albumList),
            returnValue: <_i9.Album>[],
          )
          as List<_i9.Album>);

  @override
  List<_i9.Album> get albumFavoriteList =>
      (super.noSuchMethod(
            Invocation.getter(#albumFavoriteList),
            returnValue: <_i9.Album>[],
          )
          as List<_i9.Album>);

  @override
  List<_i10.AlbumDetailModel> get albumDetailList =>
      (super.noSuchMethod(
            Invocation.getter(#albumDetailList),
            returnValue: <_i10.AlbumDetailModel>[],
          )
          as List<_i10.AlbumDetailModel>);

  @override
  String get message =>
      (super.noSuchMethod(
            Invocation.getter(#message),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.getter(#message),
            ),
          )
          as String);

  @override
  _i16.RequestState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i16.RequestState.empty,
          )
          as _i16.RequestState);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void resetData() => super.noSuchMethod(
    Invocation.method(#resetData, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> fetchAlbumList(int? userId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAlbumList, [userId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> fetchAlbumDetailList(int? albumId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAlbumDetailList, [albumId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void updateFavoriteAlbum(_i9.Album? album) => super.noSuchMethod(
    Invocation.method(#updateFavoriteAlbum, [album]),
    returnValueForMissingStub: null,
  );

  @override
  void setMessage(String? message) => super.noSuchMethod(
    Invocation.method(#setMessage, [message]),
    returnValueForMissingStub: null,
  );

  @override
  void setState(_i16.RequestState? state) => super.noSuchMethod(
    Invocation.method(#setState, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i18.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
